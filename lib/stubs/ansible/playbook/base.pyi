from typing import Any, Mapping, Optional, Sequence, Union

from ansible.parsing.yaml.objects import AnsibleBaseYAMLObject

Scalar = Union[str, int, bool, float]
Value = Union[Scalar, AnsibleBaseYAMLObject]

class FieldAttributeBase:
    _attributes: Mapping[str, Value] = ...

    def dump_attrs(self) -> Mapping[str, object]: ...

class Base(FieldAttributeBase):
    name: str = ...
    connection: str = ...
    port: int = ...
    remote_user: str = ...
    vars: Mapping[str, object] = ...
    module_defaults: Sequence[object] = ...
    environment: Sequence[object] = ...
    no_log: bool = ...
    run_once: bool = ...
    ignore_errors: bool = ...
    ignore_unreachable: bool = ...
    check_mode: bool = ...
    diff: bool = ...
    any_errors_fatal: bool = ...
    throttle: int = ...
    debugger: str = ...
    become: bool = ...
    become_method: str = ...
    become_user: str = ...
    become_flags: str = ...
    become_exe: str = ...