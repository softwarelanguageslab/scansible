from ansible.playbook.base import Base
from ansible.playbook.collectionsearch import CollectionSearch
from ansible.playbook.conditional import Conditional
from ansible.playbook.taggable import Taggable
from ansible.playbook.loop_control import LoopControl
from ansible.playbook.role import Role
from ansible.playbook.block import Block
from typing import Mapping, Sequence

class Task(Base, Conditional, Taggable, CollectionSearch):
    args: Mapping[str, object] = ...
    action: str = ...
    async_val: int = ...
    changed_when: Sequence[str] = ...
    delay: int = ...
    delegate_to: str = ...
    delegate_facts: bool = ...
    failed_when: Sequence[str] = ...
    loop: object = ...
    loop_control: LoopControl = ...
    notify: Sequence[str] = ...
    poll: int = ...
    register: str = ...
    retries: int = ...
    until: Sequence[str] = ...
    loop_with: str = ...
    role: Role = ...
    parent: Block = ...
    def get_path(self) -> str: ...
    def get_name(self, include_role_fqcn: bool = ...) -> str: ...