from __future__ import annotations

from typing import Any, ContextManager, Dict, Optional

from requests import Session

from .configure import Configuration as Configuration

class Betamax:
    def __init__(
        self,
        session: Session,
        cassette_library_dir: Optional[str] = ...,
        default_cassette_options: Dict[str, Any] = ...,
    ) -> None: ...
    session: Session = ...
    config: Configuration = ...
    @staticmethod
    def configure() -> ContextManager[Configuration]: ...
    def use_cassette(
        self, cassette_name: str, serialize_with: Optional[str] = ...
    ) -> None: ...
    def start(self) -> None: ...
    def stop(self) -> None: ...
