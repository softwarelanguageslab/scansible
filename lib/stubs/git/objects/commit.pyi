from typing import Any, Optional, Sequence, Union, Iterator

from datetime import datetime

from . import base
Repo = Any  # from ..repo import Repo
from .util import Serializable, Traversable
from ..diff import Diffable
from ..util import Iterable, Actor, Stats

class Commit(base.Object, Iterable, Diffable, Traversable[Commit], Serializable):
    env_author_date: str = ...
    env_committer_date: str = ...
    conf_encoding: str = ...
    default_encoding: str = ...
    type: str = ...
    tree: Any = ...
    author: Actor = ...
    authored_date: int = ...
    author_tz_offset: int = ...
    committer: Actor = ...
    committed_date: int = ...
    committer_tz_offset: int = ...
    message: str = ...
    parents: Sequence[Commit] = ...
    encoding: str = ...
    gpgsig: str = ...
    def __init__(self, repo: Repo, binsha: bytes, tree: Optional[Any] = ..., author: Optional[Actor] = ..., authored_date: Optional[int] = ..., author_tz_offset: Optional[int] = ..., committer: Optional[Actor] = ..., committed_date: Optional[int] = ..., committer_tz_offset: Optional[int] = ..., message: Optional[str] = ..., parents: Optional[Sequence[Commit]] = ..., encoding: Optional[str] = ..., gpgsig: Optional[str] = ...) -> None: ...
    @property
    def authored_datetime(self) -> datetime: ...
    @property
    def committed_datetime(self) -> datetime: ...
    @property
    def summary(self) -> str: ...
    def count(self, paths: Union[str, Sequence[str]] = ..., **kwargs: Any) -> int: ...
    @property
    def name_rev(self) -> str: ...
    @classmethod
    def iter_items(cls, repo: Repo, rev: str, paths: Union[str, Sequence[str]] = ..., **kwargs: Any) -> Iterator[Commit]: ...  # type: ignore[override]
    def iter_parents(self, paths: Union[str, Sequence[str]] = ..., **kwargs: Any) -> Iterator[Commit]: ...
    @property
    def stats(self) -> Stats: ...
    @classmethod
    def create_from_tree(cls, repo: Repo, tree: Any, message: str, parent_commits: Optional[Sequence[Commit]] = ..., head: bool = ..., author: Optional[Actor] = ..., committer: Optional[Actor] = ..., author_date: Optional[int] = ..., commit_date: Optional[int] = ...) -> Commit: ...
