from __future__ import annotations

PURE_LOOKUP_PLUGINS = frozenset(
    {
        "config",
        "dict",
        "indexed_items",
        "items",
        "list",
        "nested",
        "sequence",
        "subelements",
        "together",
        "cartesian",
        # TODO: Is `env` really pure? It might not be, but it leads to a lot of false positives.
        "env",
    }
)

PURE_FILTERS = frozenset(
    {
        # Jinja2 built-in
        "abs",
        "attr",
        "batch",
        "capitalize",
        "center",
        "default",
        "d",
        "dictsort",
        "escape",
        "e",
        "filesizeformat",
        "first",
        "float",
        "forceescape",
        "format",
        "groupby",
        "indent",
        "int",
        "join",
        "last",
        "length",
        "count",
        "list",
        "lower",
        "map",
        "max",
        "min",
        "pprint",
        "reject",
        "rejectattr",
        "replace",
        "reverse",
        "round",
        "safe",
        "select",
        "selectattr",
        "slice",
        "sort",
        "string",
        "striptags",
        "sum",
        "title",
        "tojson",
        "trim",
        "truncate",
        "unique",
        "upper",
        "urlencode",
        "urlize",
        "wordcount",
        "wordwrap",
        "xmlattr",
        # Ansible built-ins
        "b64decode",
        "b64encode",
        "to_uuid",
        "to_json",
        "to_nice_json",
        "from_json",
        "to_yaml",
        "to_nice_yaml",
        "from_yaml",
        "from_yaml_all",
        "basename",
        "dirname",
        "expanduser",
        "path_join",
        "relpath",
        "splitext",
        "win_basename",
        "win_dirname",
        "win_splitdrive",
        "bool",
        "to_datetime",
        "strftime",
        "quote",
        "md5",
        "sha1",
        "checksum",
        "password_hash",
        "hash",
        "regex_replace",
        "regex_escape",
        "regex_search",
        "regex_findall",
        "ternary",
        "mandatory",
        "comment",
        "type_debug",
        "combine",
        "extract",
        "flatten",
        "dict2items",
        "items2dict",
        "subelements",
        "split",
        "urldecode",
        "urlencode",
        "urlsplit",
        "min",
        "max",
        "log",
        "pow",
        "root",
        "unique",
        "intersect",
        "difference",
        "symmetric_difference",
        "union",
        "product",
        "permutations",
        "combinations",
        "human_readable",
        "human_to_bytes",
        "rekey_on_member",
        "zip",
        "zip_longest",
        "json_query",
        "ipaddr",
        "version_compare",
    }
)

PURE_TESTS = frozenset(
    {
        # Jinja2 built-in
        "boolean",
        "callable",
        "defined",
        "divisibleby",
        "eq",
        "equalto",
        "==",
        "escaped",
        "even",
        "false",
        "filter",
        "float",
        "ge",
        ">=",
        "gt",
        "greaterthan",
        ">",
        "in",
        "integer",
        "iterable",
        "le",
        "<=",
        "lower",
        "lt",
        "<",
        "lessthan",
        "mapping",
        "ne",
        "!=",
        "none",
        "number",
        "odd",
        "sameas",
        "sequence",
        "string",
        "true",
        "undefined",
        "upper",
        # Ansible built-in
        "match",
        "search",
        "regex",
        "version_compare",
        "version",
        "any",
        "all",
        "truthy",
        "falsy",
        "vault_encrypted",
        "is_abs",
        "abs",
        "issubset",
        "subset",
        "issuperset",
        "superset",
        "contains",
        "isnan",
        "nan",
    }
)

MAGIC_VAR_NAMES = frozenset(
    {
        # https://docs.ansible.com/ansible/latest/reference_appendices/special_variables.html#special-variables
        # and ansible/vars/manager.py#_get_magic_variables
        "ansible_check_mode",
        "ansible_config_file",
        "ansible_dependent_role_names",
        "ansible_diff_mode",
        "ansible_forks",
        "ansible_inventory_sources",
        "ansible_limit",
        "ansible_play_batch",
        "ansible_play_hosts",
        "ansible_play_hosts_all",
        "ansible_play_role_names",
        "ansible_playbook_python",
        "ansible_role_names",
        "ansible_role_name",
        "ansible_collection_name",
        "ansible_run_tags",
        "ansible_search_path",
        "ansible_skip_tags",
        "ansible_verbosity",
        "ansible_version",
        "groups",
        "hostvars",
        "omit",
        "play_hosts",
        "ansible_play_name",
        "playbook_dir",
        "role_name",
        "role_names",
        "role_path",
        # ansible/vars/manager.py#_get_magic_variables
        "role_uuid",
        # ansible/vars/manager.py#get_vars
        "environment",
        "vars",
        "ansible_delegated_vars",
        "_ansible_loop_cache",
        # There are only "magic" vars in the looped task itself, but don't exist
        # outside loops. In tasks inside a looped include, these are include
        # params, not magic vars. Regardless, we'll approximate them as magic
        # vars, because they probably shouldn't be set by the user anyway, and
        # even as include params, they still have very high precedence.
        "ansible_loop",
        "ansible_loop_var",
        "ansible_index_var",
        # Similarly, these are actually role include params, not magic vars,
        # but include params have the highest precedence anyway.
        "ansible_parent_role_names",
        "ansible_parent_role_paths",
        # Not sure about this one.
        "ansible_search_path",
        # These are in fact host vars, so much lower precedence than magic vars.
        # "group_names",
        # "inventory_hostname",
        # "inventory_hostname_short",
        # "inventory_dir",
        # "inventory_file",
    }
)

# Known host fact names that don't start with "ansible_"
UNQUALIFIED_HOST_FACT_NAMES = frozenset(
    {
        # See above, mentioned as magic vars, but are in fact host vars
        "group_names",
        "inventory_hostname",
        "inventory_hostname_short",
        "inventory_dir",
        "inventory_file",
    }
)


# Known possible values for host facts
HOST_FACTS_OPTIONS = {
    "ansible_os_family": ...,
    "ansible_distribution": ...,
}
